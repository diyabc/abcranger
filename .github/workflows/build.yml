name: Build and upload to PyPI

env:
  CIBW_BUILD: cp38-manylinux_x86_64
  CIBW_MANYLINUX_X86_64_IMAGE: graki/abcranger_manylinux2014_x86_64
#  CIBW_BEFORE_BUILD: bash presetup.sh
#  CIBW_ENVIRONMENT: "PATH=$HOME/clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04/bin:$HOME/.local/bin:$PATH CC=clang CXX=clang++ CXXFLAGS=\"-stdlib=libc++\" LDFLAGS=\"-L$HOME/clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04/lib\" VCPKG_KEEP_ENV_VARS=\"CC;CXX;CXXFLAGS\" VCPKG_FORCE_SYSTEM_BINARIES=1"
  CIBW_ENVIRONMENT: "PATH=$HOME/.local/bin:$PATH VCPKG_FORCE_SYSTEM_BINARIES=1"

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.6.1

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
          pip install cmake ninja cmaketools wheel
          python setup.py sdist -d wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: |
            ./wheelhouse/*.whl
            ./wheelhoust/*.tar.gz

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          repository_url: https://test.pypi.org/legacy/
